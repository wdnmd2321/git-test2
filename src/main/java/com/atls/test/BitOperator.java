package com.atls.test;

public class BitOperator {
    public static void main(String[] args) {
        //得到2的补码 => 2的原码 00000000 00000000 00000000 00000010
        //2 的补码 00000000 00000000 00000000 00000010
        //3的原码 补码 00000000 00000000 00000000 00000011
        //按位与&
        //00000000 00000000 00000000 00000010
        //00000000 00000000 00000000 00000011
        //00000000 00000000 00000000 00000010 &运算后的补码
        //运算后的原码 00000000 00000000 00000000 00000010
        System.out.println(2&3);
        //推导
        //得到-2的原码 10000000 00000000 00000000 00000010
        //得到-2的补码 11111111 11111111 11111111 11111101
        //-2 的反码   11111111 11111111 11111111 11111110
        // ~-2       00000000 00000000 00000000 00000001运算后的补码
        //运算后的原码00000000 00000000 00000000 00000001
        System.out.println(~-2);
        //得到2的补码  00000000 00000000 00000000 00000010
        //~2操作      11111111 11111111 11111111 11111101
        //运算后的反码  11111111 11111111 11111111 11111100
        //运算后的原码  10000000 00000000 00000000 00000011 =>-3



        System.out.println(~2);
    }
}
